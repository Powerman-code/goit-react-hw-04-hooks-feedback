{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","leaveFeedback","options","console","log","map","el","id","name","type","className","s","button","onClick","charAt","toUpperCase","substr","toLowerCase","Notification","message","text","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","section","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","prevState","PositiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,OAAS,kC,kCCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,qICuBbC,EArBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAExC,OADAC,QAAQC,IAAIF,GACLA,EAAQG,KAAI,SAACC,GAAD,OACjB,wBAEEC,GAAG,IACHC,KAAMF,EACNG,KAAK,SACLC,UAAWC,IAAEC,OACbC,QAASZ,EANX,SAQGK,EAAGQ,OAAO,GAAGC,cAAgBT,EAAGU,OAAO,GAAGC,eAPtCX,O,gBCDI,SAASY,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGT,UAAWC,IAAES,KAAhB,SAAuBD,ICJjB,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAGA,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,4CAAeC,EAAf,UAGO,IAAVD,GACC,cAACP,EAAD,CAAcC,QAAQ,6B,oBCNfQ,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASnB,UAAWC,IAAEmB,QAAtB,UACE,6BAAKF,IACJC,MCDQ,SAASE,IAAY,IAAD,EACTC,mBAAS,GADA,mBAC1BV,EAD0B,KACpBW,EADoB,OAEHD,mBAAS,GAFN,mBAE1BT,EAF0B,KAEjBW,EAFiB,OAGXF,mBAAS,GAHE,mBAG1BR,EAH0B,KAGrBW,EAHqB,KA2B3BC,EAAqB,WACzB,OAAOd,EAAOC,EAAUC,GAU1B,OACE,gCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiB1B,QApCP,CAAC,OAAQ,UAAW,OAoCKD,cAlCnB,SAACoC,GAAW,IACxB7B,EAAS6B,EAAMC,OAAf9B,KAER,OADAL,QAAQC,IAAIiC,EAAMC,QACV9B,GACN,IAAK,OACHyB,GAAQ,SAACM,GAAD,OAAeA,EAAY,KACnC,MAEF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAeA,EAAY,KACtC,MAEF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAeA,EAAY,KAClC,MACF,QACE,aAoBF,cAAC,EAAD,CAASX,MAAM,aAAf,SACE,cAACP,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,mBAlBgC,WACtC,IAAMc,EAA6BC,KAAKC,MAC9B,IAAPpB,EAAcc,KAEjB,OAAOI,GAA0D,EAcvCG,UCrDf,SAASC,IACtB,OACE,8BACE,cAACb,EAAD,MCANc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.c06c0dfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3BDJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__B0wVp\"};","// import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ leaveFeedback, options }) => {\n  console.log(options);\n  return options.map((el) => (\n    <button\n      key={el}\n      id=\"1\"\n      name={el}\n      type=\"button\"\n      className={s.button}\n      onClick={leaveFeedback}\n    >\n      {el.charAt(0).toUpperCase() + el.substr(1).toLowerCase()}\n    </button>\n  ));\n};\n\n// FeedbackOptions.propTypes = {\n//   leaveFeedback: PropTypes.func.isRequired,\n//   options: PropTypes.arrayOf(PropTypes.string).isRequired,\n// };\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\n// export default Notification = ({ message }) => (\n//   <p className={s.text}>{message}</p>\n// );\nexport default function Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\n// export default Notification;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  // const { good, neutral, bad, total, positivePercentage } = props;\n  return (\n    <>\n      {total > 0 && (\n        <ul>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>Positive: {positivePercentage}%</li>\n        </ul>\n      )}\n      {total === 0 && (\n        <Notification message=\"No Feedback was given\"></Notification>\n      )}\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import { useState } from \"react\";\n\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Section from \"../Section/Section\";\n\nexport default function Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const options = [\"good\", \"neutral\", \"bad\"];\n\n  const leaveFeedback = (event) => {\n    const { name } = event.target;\n    console.log(event.target);\n    switch (name) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const PositiveFeedbackPercentage = Math.round(\n      (good * 100) / countTotalFeedback()\n    );\n    return PositiveFeedbackPercentage ? PositiveFeedbackPercentage : 0;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} leaveFeedback={leaveFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n// }\n\n// import { Component } from \"react\";\n\n// import FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\n// import Statistics from \"../Statistics/Statistics\";\n// import Section from \"../Section/Section\";\n\n// export default class Feedback extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   leaveFeedback = (event) => {\n//     const { name } = event.target;\n//     this.setState((prevState) => {\n//       console.log(event.target.name);\n//       return { [name]: prevState[name] + 1 };\n//     });\n//   };\n\n//   countTotalFeedback = () => {\n//     console.log(this.state.good);\n//     return Object.values(this.state).reduce((acc, item) => acc + item, 0);\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     const PositiveFeedbackPercentage = Math.round(\n//       (this.state.good * 100) / this.countTotalFeedback()\n//     );\n//     return PositiveFeedbackPercentage ? PositiveFeedbackPercentage : 0;\n//   };\n\n//   render() {\n//     console.log(Object.values(this.state));\n//     const { good, neutral, bad } = this.state;\n\n//     return (\n//       <div>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={Object.keys(this.state)}\n//             leaveFeedback={this.leaveFeedback}\n//           />\n//         </Section>\n//         <Section title=\"Statistics\">\n//           <Statistics\n//             good={good}\n//             neutral={neutral}\n//             bad={bad}\n//             total={this.countTotalFeedback()}\n//             positivePercentage={this.countPositiveFeedbackPercentage()}\n//           />\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n","import Feedback from './components/Feedback/Feedback';\n\nexport default function App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}